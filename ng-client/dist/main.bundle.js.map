{"version":3,"sources":["/Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/$_lazy_route_resource lazy","/Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/app/WindowRefService.ts","/Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/app/app.component.css","/Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/app/app.component.html","/Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/app/app.component.ts","/Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/app/app.module.ts","/Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/app/library-thing.service.ts","/Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/environments/environment.ts","/Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/main.ts","/Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/utils/lilInspector.ts","/Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/utils/parse.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","// https://juristr.com/blog/2016/09/ng2-get-window-ref/\n\nimport {Injectable} from \"@angular/core\";\n\n\n\n@Injectable()\nexport class WindowRefService {\n    get myNativeWindowGetter(): any {\n        return _window();\n    }\n}\n\nfunction _window(): Window {\n    // return the global native browser window object\n    return window;\n}\n\n\n// WEBPACK FOOTER //\n// /Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/app/WindowRefService.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\" style=\\\"background-color: cornflowerblue\\\">\\n    <div class=\\\"column left\\\">\\n        <div style=\\\"text-align:center\\\">\\n            <h1>\\n                {{ title }}\\n            </h1>\\n        </div>\\n    </div>\\n    <div class=\\\"column right\\\">\\n        <img src=\\\"https://www.librarything.com/pics/piles/downpile/18.jpg\\\" style=\\\"max-height: 100px\\\" alt=\\\"\\\">\\n    </div>\\n</div>\\n    <div class=\\\"row\\\">\\n    <div style=\\\"text-align:center\\\">\\n        <a href=\\\"https://www.librarything.com/services/rest/documentation/1.1/\\\" target=\\\"_blank\\\">LibraryThing's API Documentation</a> | <a\\n        href=\\\"https://www.librarything.com/services/rest/1.1/?method=librarything.ck.getwork&id=1060&apikey=d231aa37c9b4f5d304a60a3d0ad1dad4\\\" target=\\\"_blank\\\">LibraryThing's Sample XML Response</a>\\n</div>\\n\\n    <hr />\\n    <div><a href=\\\"https://canvas.harvard.edu/courses/35096\\\" target=\\\"_blank\\\">CSCI-E31</a> Assignment 8 (Graduate Credit Extra Work)</div>\\n</div>\\n    <h2>Angular Client and Express Proxy Server</h2>\\n<div>Proxy Server technique used to reach a Web Service from LibraryThing.com that has <strong><span style=\\\"font-size: large;\\\">No <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\\\" target=\\\"_blank\\\">CORS</a> Allowed</span></strong></div>\\n\\n<h3>PLEASE SEE README.md: <a href=\\\"https://github.com/wreilly/e31-assignment-08-proxy-and-client-wreilly/blob/master/README.md\\\" target=\\\"_blank\\\">https://github.com/wreilly/e31-assignment-08-proxy-and-client-wreilly/blob/master/README.md</a></h3>\\n\\n    <hr />\\n\\n\\n<div class=\\\"row\\\">\\n  <h3>0. FakeAPI</h3>\\n    <p><em>Just for contrast to the more complex Proxy Server for LibraryThing: here is a straightforward HTTP service.</em></p>\\n  <h4>Get 100 FakeAPI \\\"Lorem Ipsum\\\" Entries</h4>\\n  <div style=\\\"font-size: x-small;\\\">1. HTTP REQ: https://jsonplaceholder.typicode.com/posts</div>\\n  <ul>\\n    <li>This API <em>does</em> allow CORS; there is no need for a Proxy Server.</li>\\n    <li>(Note: In the Angular Client app, I for convenience did put the HTTP request direct to FakeAPI.com inside of my \\\"LibraryThingService\\\".)</li>\\n</ul>\\n  <button type=\\\"submit\\\" (click)=\\\"getFakeAPI($event)\\\">Display FakeAPI Entries</button>\\n  <br />\\n  <br />\\n<button type=\\\"submit\\\" on-click=\\\"clearFakeAPI()\\\"><em>(Clear FakeAPI Entries)</em></button>\\n  <hr />\\n  <ol>\\n  <li *ngFor=\\\"let fapi of fakeApiStuff\\\">\\n    {{ fapi.title }}\\n  </li>\\n</ol>\\n</div>\\n<div class=\\\"row\\\" style=\\\"background-color: yellowgreen\\\">\\n        <div class=\\\"column left\\\">\\n            <h3>1. LibraryThing - Web Services API</h3>\\n        </div>\\n        <div class=\\\"column right\\\" style=\\\"align-content: center\\\">\\n            <!--\\n                <a href=\\\"http://www.librarything.com/\\\" target=\\\"_blank\\\"><img src=\\\"https://www.librarything.com/pics/piles/downpile/18.jpg\\\" style=\\\"max-height: 100px\\\" alt=\\\"\\\"></a>\\n            -->\\n            <img src=\\\"http://pics.cdn.librarything.com/picsizes/24/bd/24bd271ed51344f5979696a5551434f414f4141.jpg\\\"  style=\\\"max-height: 100px\\\" alt=\\\"\\\">\\n        </div>\\n    </div>\\n  <div class=\\\"row\\\">\\n\\n      <!-- e.g. 'http://104.236.198.117:3000/' -->\\n      <div style=\\\"font-size: x-small;\\\">1. PROXY pointing to: {{ apiUrlStubInApp }} myspecialproxy/:book_id</div>\\n      <!-- Use \\\"{{ '{' }}\\\") to escape it. -->\\n      <div style=\\\"font-size: x-small;\\\">2. HTTP REQ: http://www.librarything.com/services/rest/1.1/?method=librarything.ck.getwork&id=${{'{'}}book_id_passed{{'}'}}&apikey=59211e...</div>\\n      <ul>\\n        <li>This LibraryThing Web Service has the \\\"No CORS Allowed\\\" problem, and so this solution makes use of a Proxy Server.</li>\\n        <li>Uses my Angular app \\\"LibraryThingService\\\", for HTTP request first to the Proxy Server (hence from Proxy Server to LibraryThing).</li>\\n      </ul>\\n      <br />\\n      <div  style=\\\"background-color: lightblue; padding: 8px;\\\">\\n        <label for=\\\"bookId_id\\\">LibraryThing Book ID # : </label>\\n        <input type=\\\"text\\\" ref-bookId id=\\\"bookId_id\\\" name=\\\"bookId_name\\\" on-keyup.enter=\\\"getLtWsApi(bookId)\\\" placeholder=\\\"e.g. 1528\\\" />\\n        <br />\\n        <button type=\\\"submit\\\" on-click=\\\"getLtWsApi(bookId)\\\">Indicate Book ID# to Retrieve</button>\\n        <ul>\\n          <li>1528 = The Red Badge of Courage</li>\\n          <li>1527 = The Picture of Dorian Gray</li>\\n          <li>1526 = The Odyssey</li>\\n          <li>1525 = The Name of the Rose</li>\\n        </ul>\\n      </div>\\n      <ul>\\n        <li>Author: {{ myAuthor }}</li>\\n        <li>Title: {{ myTitle }}</li>\\n        <li>Rating: {{ myRating }}</li>\\n        <li>LibraryThing URL: <a href=\\\"{{myLtUrl}}\\\" target=\\\"_blank\\\">{{ myLtUrl }}</a></li>\\n      </ul>\\n      <!--   <h5 *ngIf=\\\"{{ myCharacterNames }}\\\">Character Names</h5> -->\\n      <ol>\\n        <li *ngFor=\\\"let cName of myCharacterNames\\\">{{ cName }}</li>\\n      </ol>\\n</div>\\n\\n<h3>PLEASE SEE README.md: <a href=\\\"https://github.com/wreilly/e31-assignment-08-proxy-and-client-wreilly/blob/master/README.md\\\" target=\\\"_blank\\\">https://github.com/wreilly/e31-assignment-08-proxy-and-client-wreilly/blob/master/README.md</a></h3>\\n\\n\\n<div class=\\\"center\\\">\\n    <hr />\\n    <div>(c) Some Times Accesses LibraryThing, & Beyond 2018</div>\\n    <div>William Reilly - wreilly2001@gmail.com</div>\\n    <div>CSCI-E31 Assignment 8 (Graduate Credit Extra Work) - April 30, 2018</div>\\n    <hr />\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { LibraryThingService } from './library-thing.service';\n\n// https://juristr.com/blog/2016/09/ng2-get-window-ref/\nimport { WindowRefService } from './WindowRefService';\n\n// Only bringing in this Environment property so we can display it to the U/I (testing/dev purposes)\n// No need to specify which environment file (e.g. \"prod\")\nimport { environment } from '../environments/environment';\n\n\n\nimport { lilInspector } from '../utils/lilInspector';\nimport { flatten, parse } from '../utils/parse';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [LibraryThingService, WindowRefService ]\n})\nexport class AppComponent {\n  title = 'LibraryThing - Web Services API';\n  fakeApiStuff; // the [{},{}...] of lorem ipsum ....\n  ltWsApiStuff; // the XML data off of the web service return\n  myAuthor;\n  myTitle;\n  myRating;\n  myLtUrl;\n  myCharacterNames = [];\n  apiUrlStubInApp = environment.apiUrlStubInEnvironment;\n  // e.g. 'http://104.236.198.117:3000/'\n\n\n  constructor(private _myLibraryThingService: LibraryThingService, private _myWindowRefService: WindowRefService) {  }\n\n  /* ******************************* */\n  /* *******  FAKEAPI ************** */\n  getFakeAPI(event) {\n    this._myLibraryThingService.get100FakeAPI()\n    .subscribe(\n       (response: any) => {\n         console.log('Ng HTTP response is ', response);\n         lilInspector(response[0], '');\n/* Input:\n[ 0: {userId: 1, id: 1, title: \"sunt aut facere ...\"}\n*/\n         this.fakeApiStuff = response;\n          console.log('Ng HTTP this.fakeApiStuff is ', this.fakeApiStuff); // [{},{}...]\n       },\n       (err) => {\n         console.log('Ng HTTP err ', err);\n       },\n       () => { console.log('Complete .......'); }\n     );\n  }\n\n  clearFakeAPI() {\n      this.fakeApiStuff = []; // reset\n  }\n\n  /* ******************************* */\n  /* ***** LIBRARYTHING - WEB SERVICES (XML) API ******* */\n  /* ******************************* */\n  getLtWsApi(inputElementRefPassedIn) {\n    // console.log('LtWsApi eventPassedIn ', eventPassedIn);\n    // const book_id_hardcoded = '1528'; // Red Badge of Courage\n    // const book_id: string = inputElementRefPassedIn.value;\n\n    let book_id = '';\n\n    // If user just clicks Submit (no entry to input box),\n      // we'll run default book 1528 (Red Badge of Courage)\n    inputElementRefPassedIn.value ? book_id = inputElementRefPassedIn.value : book_id = '1528';\n\n\n    // Reset display of data\n    this.myAuthor = '';\n    this.myTitle = '';\n    this.myRating = '';\n    this.myLtUrl = '';\n    this.myCharacterNames = [];\n\n\n    this._myLibraryThingService.getLibraryThingCK(book_id) // (book_id) // (book_id_hardcoded)\n      .subscribe(\n        (whatIGot: any) => {\n\n          /*\n          Special Note\n          For use with Angular's HTTP\n          (as opposed to with Axios, before),\n          I doctored the proxy server.\n          Here is what it is sending us:\n\n           // Time to try my own \"wrapping\" right here in my Proxy Server:\n           const myWrappedDataObject = { myDataProperty: data }\n           res.status(200).send(myWrappedDataObject); // << Working fine, sends whole object. All set.\n\n           We may need to use whatIGot.myDataProperty to get at the XML string.\n           We'll see.\n           */\n\n      //    console.log('here we are & Etc. whatIGot.myDataProperty ', whatIGot.myDataProperty);\n            /* STILL COMPLAINING. W-a-a-a-a-h.\n\"ERROR in src/app/app.component.ts(87,40): error TS2339: Property 'myDataProperty' does not exist on type 'Object'.\"\n             */\n          this.ltWsApiStuff = whatIGot.myDataProperty;\n\n// https://stackoverflow.com/questions/649614/xml-parsing-of-a-variable-string-in-javascript\n          /* TODO Consider this alternative:\n           https://naturalintelligence.github.io/fast-xml-parser/\n           */\n          function myParseXml(xmlStr, thingAsThis) {\n            const that = thingAsThis;\n\n/* TypeScript complained about \".DOMParser\" not a property on window.\nSee // https://juristr.com/blog/2016/09/ng2-get-window-ref/\n              return new window.DOMParser() // << No.\n*/\n              return new that._myWindowRefService.myNativeWindowGetter.DOMParser().parseFromString(xmlStr, 'text/xml');\n          }\n/* COMPLAINED about '.myDataProperty'\n\"src/app/app.component.ts(95,59): error TS2339: Property 'myDataProperty' does not exist on type 'Object'\"\n\n            const myGroovyXmlDocument = myParseXml(whatIGot.myDataProperty);\n*/\n            const myGroovyXmlDocument = myParseXml(this.ltWsApiStuff, this);\n   //       console.log('myGroovyXmlDocument ', myGroovyXmlDocument);\n          /* The XML (partial):\n           <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n           <response stat=\"ok\">\n              <ltml xmlns=\"http://www.librarything.com/\" version=\"1.1\">\n                 <item id=\"1528\" type=\"work\">\n                    <author id=\"720\" authorcode=\"cranestephen\">Stephen Crane</author>\n                    <title>The Red Badge of Courage</title>\n                    <rating>6.8</rating>\n            <url>http://www.librarything.com/work/1528</url> ...\n           */\n\n           /* **** JAVASCRIPT to PARSE XML to OBJECT\n\nhttps://andrew.stwrt.ca/posts/js-xml-parsing/\nHas dependency on lodash. (I did npm install lodash...)\n(initially tried using CDN; dropped that)\nhttps://cdn.jsdelivr.net/npm/lodash@4.17.10/lodash.min.js\n--------------------------------------\nparse.js --> parse.ts\n           */\n          const myParsedGroovyXmlDocument =   parse(myGroovyXmlDocument);\n          lilInspector(myParsedGroovyXmlDocument, '');\n          console.log(myParsedGroovyXmlDocument, '');\n\n// https://stackoverflow.com/questions/17604071/parse-xml-using-javascript\n// https://gist.github.com/jashmenn/b306add36d3e6f0f6483 Javascript var self = this; vs. .bind\n\n/* Some Hard-Coded Values (for Testing)\nre: CharacterNames\n- Because the LibraryThing entry records for books will vary (a great deal),\n-- I cannot place one \"blanket\" object \"dot location\" path-like thing\n--- to obtain this \"List of Character Names\" from all searches...\n- So, I simply hard-coded two examples (I manually discovered the exact object location for each)\n- And made provision for default, as well as for empty search box\n*/\n          switch (book_id) {\n            case '1528': // The Red Badge of Courage\n              this.myCharacterNames = myParsedGroovyXmlDocument.ltml.item.commonknowledge[9].versionList.factList;\n              getCommonFour(this);\n              break;\n\n            case '1527': // The Picture of Dorian Gray\n              this.myCharacterNames = myParsedGroovyXmlDocument.ltml.item.commonknowledge[13].versionList.factList;\n              getCommonFour(this);\n              break;\n\n              case '': // Red Badge, if they just click Submit\n              this.myCharacterNames = myParsedGroovyXmlDocument.ltml.item.commonknowledge[9].versionList.factList;\n              break;\n\n            default:\n              getCommonFour(this);\n              break;\n          }\n\n          function getCommonFour(thingAsThis) {\n            const that = thingAsThis; // \"this equals that\"\n            that.myAuthor = myGroovyXmlDocument.getElementsByTagName('author')[0].childNodes[0].nodeValue;\n            that.myTitle = myGroovyXmlDocument.getElementsByTagName('title')[0].childNodes[0].nodeValue;\n            that.myRating = myGroovyXmlDocument.getElementsByTagName('rating')[0].childNodes[0].nodeValue;\n            that.myLtUrl = myGroovyXmlDocument.getElementsByTagName('url')[0].childNodes[0].nodeValue;\n          }\n        },\n        (err) => {\n          console.log('LtWsApi err: ', err);\n        },\n        () => {\n          // done\n          console.log('LtWsApi Complete ...');\n        }\n      );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n// No need to specify which environment file (e.g. \"prod\")\nimport { environment } from '../environments/environment';\n\n@Injectable()\nexport class LibraryThingService {\n/*\nService to reach REST Services\nfrom LibraryThing.com (LT)\nfor two purposes:\n\n1) \"LT Web Services API\"\n   - No CORS support\n   - JSONP can *not* be used...\n   -- ...because it *returns XML*\n   - Therefore requires Proxy Server\n\n2) \"LT JavaScript API\"\n   - No CORS support\n   - JSONP can be used\n   -- (Therefore does *not* require proxy server)\n\nINPUTS TO QUERY:\n# 1) API Key, Book ID\n# 2) User ID\n\nDATA TYPE RETURNED:\n# 1) returns XML\n# 2) returns JSON\n\nBUSINESS PURPOSE:\n# 1) provides general information about a given work (book)\n# 2) provides specific information from your own LT catalog/account\n\nSAMPLE URL:\n# 1) example:\n http://www.librarything.com/services/rest/1.1/\n ?method=librarything.ck.getwork\n &apikey=59211e...\n &id=1060\n\n (\"ck\" is their \"Common Knowledge\" database)\n\n\n# 2) example:\n http://www.librarything.com/api_getdata.php/\n ?userid='wreilly'\n &showstructure=1\n &max=10\n &showCollections=1\n &showTags=1\n &booksort=title_REV\n\n */\n\n    apiUrlStubInService = environment.apiUrlStubInEnvironment;\n    // e.g. 'http://104.236.198.117:3000/'\n\n    constructor(private _myHttpService: HttpClient) {  }\n\n/* ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ */\n/* ^^^^^^   TOC   ^^^^^^^^^^^^^  */\n/*\n\nget100FakeAPI()  (just demonstration purpose)\n\ngetLibraryThingCK(book_id)\n\ngetLibraryThingMyBooks(user_id)\n\n*/\n\n  get100FakeAPI() {\n    // \"100\" is the default return for \"get ALL\" from this free, open, \"fake\" API.\n\n/* YER WRONG: No. Do not just \"return\" this asynchronous call like so: */\n// Yes we DO \"just return\" from here.\n      return this._myHttpService.get('https://jsonplaceholder.typicode.com/posts');\n\n/* WRONG: Hmm.    Must handle with XXPromise!XX XXObservable!!XX */\n/* NO. Here, Angular HttpClient thing GENERATES an Observable.\n       In the calling app.component.ts, we SUBSCRIBE to that Observable.\n       Cheers.\n\n      this._myHttpService.get('https://jsonplaceholder.typicode.com/posts')\n          .subscribe(\n              (whatIGot) => {\n                  return whatIGot;\n              }\n          )\n*/\n  }\n\n  getLibraryThingCK(book_id) {\n      // \"CK\" = Common Knowledge, a LibraryThing.com feature.\n    console.log('here we are in LT SERVICE & Etc. book_id is ', book_id);\n      return this._myHttpService.get(`${this.apiUrlStubInService}myspecialproxy/${book_id}`);\n/* WORKS !\n      return this._myHttpService.get(`http://0.0.0.0:3000/myspecialproxy/${book_id}`);\n*/\n\n      /* E.g., Proxy Server in turn sends to:\n       http://www.librarything.com/services/rest/1.1/?method=librarything.ck.getwork&id=1060&apikey=59211e...\n       */\n\n      /* CORS ERROR:\n       If you try to visit this address from BROWSER.\n       Needs PROXY SERVER instead.\n\n       Failed to load http://www.librarything.com/services/rest/1.1/?method=librarything.ck.getwork&apikey=59211e...&id=1060:\n       No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://0.0.0.0:4200' is therefore not allowed access.\n       */\n\n  }\n\n\n} // /LibraryThingService\n\n\n\n// WEBPACK FOOTER //\n// /Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/app/library-thing.service.ts","export const environment = {\n  production: true,\n\n\n  /* For doing \"Prod in Dev\" trial: */\n//  apiUrlStubInEnvironment: 'http://0.0.0.0:3000/'\n\n/* The REAL Prod value: */\n\n  apiUrlStubInEnvironment: 'http://104.236.198.117:3000/'\n\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n// https://stackoverflow.com/questions/34660265/importing-lodash-into-angular2-typescript-application/38357150#38357150\nimport 'lodash';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/main.ts","// This 'export' does work:\nexport var lilInspector = function (yourObject, yourObjectVariableName_kids) {\n    var lilKey; // we won't even initiate. what Type is a key, anyway? String? Hmm\n    var lilObject = yourObject; // pros? cons? of doing this?\n    console.log(\"\\n **** !!!! lilInspector !!!! ****\");\n    /* *********\n       Now we're just PASSING the \"name\" (we give it) IN:\n       yourObjectVariableName_kids\n    */\n    if (yourObjectVariableName_kids) { // If we passed it in...\n\tvar objectVariableNameThisTime = yourObjectVariableName_kids;\n\tconsole.log(\"objectVariableNameThisTime : \" + objectVariableNameThisTime); }\n    else {\n\t//\tconsole.log(\"You forgot to pass in the yourObjectVariableName_kids, kid. No big deal.\");\n    }\n    for (lilKey in lilObject){\n\tif(lilObject.hasOwnProperty(lilKey)) {\n\t    //\t    console.log(\"!!!! lilInspector !!!!\");\n\t    console.log(\"KEY   : lilKey            : \" + lilKey);\n\t    console.log(\"VALUE : lilObject[lilKey] : \" + lilObject[lilKey]);\n\t    // console.log(\"VALUE : lilObject[lilKey][objectVariableNameThisTime] : \" + lilObject[lilKey][objectVariableNameThisTime]);\n\t} else {\n\t    // do nuttin'\n\t}\n    }\n    console.log(\"**** !!!! /END lilInspector !!!! **** \\n\");\n}\n\n\n\n// Does Not Work in Angular ...  (See first line instead with 'export')\n// module.exports = lilInspector;\n\n\n\n// WEBPACK FOOTER //\n// /Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/utils/lilInspector.ts","/**\n * COPIED FROM\n * https://andrew.stwrt.ca/posts/js-xml-parsing/   parse.js\n * Dependency on Lodash.\n * npm install lodash ...\n * (Was initially loaded from CDN. (See /index.html <head><script...> )\n */\n\n/*\nJust did $ npm install --save lodash\n\nhttps://medium.com/@armno/til-importing-lodash-into-angular-the-better-way-aacbeaa40473\n */\n\n// https://stackoverflow.com/questions/34660265/importing-lodash-into-angular2-typescript-application\n/*\n $ npm install --save lodash\n # This is the new bit here:\n $ npm install --save @types/lodash\n */\nimport * as _ from 'lodash'; // '../../node_modules/lodash'; // << Did not work\n\n\n// flattens an object (recursively!), similarly to Array#flatten\n// e.g. flatten({ a: { b: { c: \"hello!\" } } }); // => \"hello!\"\nexport const flatten = function (object) {\n    let check = _.isPlainObject(object) && _.size(object) === 1;\n    return check ? flatten(_.values(object)[0]) : object;\n}\n\nexport const parse = function (xml) {\n    let data: any = {};\n\n    var isText = xml.nodeType === 3,\n        isElement = xml.nodeType === 1,\n        body = xml.textContent && xml.textContent.trim(),\n        hasChildren = xml.children && xml.children.length,\n        hasAttributes = xml.attributes && xml.attributes.length;\n\n    // if it's text just return it\n    if (isText) { return xml.nodeValue.trim(); }\n\n    // if it doesn't have any children or attributes, just return the contents\n    if (!hasChildren && !hasAttributes) { return body; }\n\n    // if it doesn't have children but _does_ have body content, we'll use that\n    if (!hasChildren && body.length) { data.text = body; }\n\n    // if it's an element with attributes, add them to data.attributes\n    if (isElement && hasAttributes) {\n        data.attributes = _.reduce(xml.attributes, function(obj, name, id) {\n            var attr = xml.attributes.item(id);\n            obj[attr.name] = attr.value;\n            return obj;\n        }, {});\n    }\n\n    // recursively call #parse over children, adding results to data\n    _.each(xml.children, function(child) {\n        var name = child.nodeName;\n\n        // if we've not come across a child with this nodeType, add it as an object\n        // and return here\n        if (!_.has(data, name)) {\n            data[name] = parse(child);\n            return;\n        }\n\n        // if we've encountered a second instance of the same nodeType, make our\n        // representation of it an array\n        if (!_.isArray(data[name])) { data[name] = [data[name]]; }\n\n        // and finally, append the new child\n        data[name].push(parse(child));\n    });\n\n    // if we can, let's fold some attributes into the body\n    _.each(data.attributes, function(value, key) {\n        if (data[key] != null) { return; }\n        data[key] = value;\n        delete data.attributes[key];\n    });\n\n    // if data.attributes is now empty, get rid of it\n    if (_.isEmpty(data.attributes)) { delete data.attributes; }\n\n    // simplify to reduce number of final leaf nodes and return\n    return flatten(data);\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/william.reilly/dev/JavaScript/CSCI-E31/Assignments/08-graduate-assignment-proxy-server/e31-assignment-08-proxy-and-client-wreilly/ng-client/src/utils/parse.ts"],"sourceRoot":"webpack:///"}